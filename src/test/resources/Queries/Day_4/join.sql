select *
from customer;

select *
from ADDRESS;

SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE
FROM CUSTOMER
         JOIN ADDRESS
              ON CUSTOMER.ADDRESS_ID = ADDRESS.ADDRESS_ID;

--WHAT IF I WANT TO SEE CUSTOMER TABLE ADDRESS_ID INFORMATION TOO:
SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, CUSTOMER.ADDRESS_ID
FROM CUSTOMER
         JOIN ADDRESS
              ON CUSTOMER.ADDRESS_ID = ADDRESS.ADDRESS_ID;

--Table aliases
--customer --c
--employees --E
--ADDRESS --A

SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, C.ADDRESS_ID, A.ADDRESS_ID
FROM CUSTOMER C
         JOIN ADDRESS A
              ON C.ADDRESS_ID = A.ADDRESS_ID;

SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, C.ADDRESS_ID, A.ADDRESS_ID
FROM CUSTOMER C
         INNER JOIN ADDRESS A --Inner join is default join
                    ON C.ADDRESS_ID = A.ADDRESS_ID;

SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, A.ADDRESS_ID
FROM CUSTOMER C
         LEFT OUTER JOIN ADDRESS A ON C.ADDRESS_ID = A.ADDRESS_ID;
--LEFT JOIN AND LEFT OUTER JOIN TOTALLY SAME
--WHICH LEFT WHICH RIGHT I DECIDE THAT BASED ON THE QUERY STRUCTURE
--FROM CUSTOMER C LEFT OUTER JOIN ADDRESS A IN THIS STRUCTURE CUSTOMER IS LEFT, ADDRESS IS RIGHT


SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, A.ADDRESS_ID
FROM CUSTOMER C
         RIGHT JOIN ADDRESS A ON C.ADDRESS_ID = A.ADDRESS_ID;


--full outer join

SELECT FIRST_NAME, LAST_NAME, ADDRESS, PHONE, A.ADDRESS_ID
FROM CUSTOMER C
         FULL JOIN ADDRESS A ON C.ADDRESS_ID = A.ADDRESS_ID;
